/*
*******************************************************************************
* Copyright (C) 2018, International Business Machines Corporation. 
* All Rights Reserved. *
*******************************************************************************
*/
use com.ibm.streamsx.elasticsearch::* ;
use com.ibm.streamsx.testframe::FileSink1;

composite Main
{
  type 
  	DataTuple = tuple <
  		int32 id,
  		rstring rmsg,
  		int64 tstamp
  	>;
  
  graph
  
  	(stream<DataTuple> Data) as DataSource = Beacon()                      
    {                                                                      
      param                                                                
        iterations : 2u;
        //period : 0.01;
      output                                                               
        Data:	
        		id = (int32)IterationCount(),
        		rmsg = "This is message number " + (rstring)IterationCount(),
        		tstamp = 123456l + (int64)IterationCount();
    }

    stream<I> DelayedData = Custom(Data as I)
    {
    	logic
    	onTuple I :
    	{
    		submit(I,DelayedData);
    	}
		onPunct I :
		{
			submit(currentPunct(),DelayedData);
			println("punct received");
		}    
    	
    	config placement : partitionColocation("X");
    }
    
    // no timestamps
    () as Elasticsearch1 = ElasticsearchIndex(DelayedData)
	{
		param
			indexName : "idx1";
		config placement : partitionColocation("X");
	}

	// timestamp from current time
    () as Elasticsearch2 = ElasticsearchIndex(DelayedData)
	{
		param
			indexName : "idx2";
			storeTimestamps : true;
			timestampName : "currTime";
		config placement : partitionColocation("X");
	}

	// timestamp from input attr
    () as Elasticsearch3 = ElasticsearchIndex(DelayedData)
	{
		param
			indexName : "idx3";
			storeTimestamps : true;
			timestampName : "tupleTime" ;
			timestampValueAttribute : tstamp ;
		config placement : partitionColocation("X");			
	}

    () as TestStopSink = FileSink1(DelayedData) {}
}
